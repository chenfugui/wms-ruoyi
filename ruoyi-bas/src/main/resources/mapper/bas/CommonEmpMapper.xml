<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cfg.base.mapper.CommonEmpMapper">
    
    <resultMap type="com.ruoyi.common.core.domain.entity.CommonEmp" id="CommonEmpResult">
        <result property="empId" column="emp_id"/>
        <result property="empCode" column="emp_code"/>
        <result property="empName" column="emp_name"/>
        <result property="empType" column="emp_type"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="orderNum" column="order_num"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectCommonEmpVo">
        select emp_id, emp_code, emp_name, emp_type, parent_id, ancestors, order_num, status, del_flag, create_by, create_time, update_by, update_time   from bas_common_emp
    </sql>

    <select id="selectByEntity" parameterType="com.ruoyi.common.core.domain.entity.CommonEmp" resultMap="CommonEmpResult">
        <include refid="selectCommonEmpVo"/>
        <where>  
            <if test="empCode != null  and empCode != ''"> and emp_code = #{empCode}</if>
            <if test="empName != null  and empName != ''"> and emp_name like concat('%', #{empName}, '%')</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="ancestors != null  and ancestors != ''"> and ancestors = #{ancestors}</if>
            <if test="orderNum != null "> and order_num = #{orderNum}</if>
        </where>
    </select>

    <update id="updateDelFlagByIds">
        update bas_common_emp set del_flag="1"
        <where>
            id in <foreach collection="ids" open="(" item="it" close=")" separator=",">#{it}</foreach>
        </where>
    </update>
</mapper>
